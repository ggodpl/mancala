use crate::full_game;

#[test]
fn avalache_test() {
    full_game!(
        board(6);

        (expect [0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4]),

        (move a 0 Left [None]) => Done(Left, 2),
        // [0, 0, 5, 5, 5, (5), 4, 0, 4, 4, 4, 4, 4, 4]
        // [0, 0, 5, 5, 5, 0, 5, 0, 5, 5, 5, (5), 4, 4]
        // [0, 1, 6, (6), 5, 0, 5, 0, 5, 5, 5, 0, 5, 5]
        // [0, 1, 6, 0, 6, 1, 6, 0, 6, 6, (6), 0, 5, 5]
        // [0, 2, 7, (1), 6, 1, 6, 0, 6, 6, 0, 1, 6, 6]
        (expect [0, 2, 7, 1, 6, 1, 6, 0, 6, 6, 0, 1, 6, 6]),

        (move a 0 Right [Side(Right)]) => ExtraTurn,
        // [0, 2, 7, 1, 6, 1, 6, 0, 6, 6, 0, 1, 6, 6]
        // [(1), 2, 7, 1, 6, 1, 6, 0, 0, 7, 1, 2, 7, 7]
        (expect [1, 2, 7, 1, 6, 1, 6, 0, 0, 7, 1, 2, 7, 7]),

        (move a 0 Left [Side(Left)]) => ExtraTurn,
        // [1, (2), 7, 1, 6, 1, 6, 0, 0, 7, 1, 2, 7, 7]
        // [1, 0, 8, (2), 6, 1, 6, 0, 0, 7, 1, 2, 7, 7]
        // [1, 0, 8, 0, 7, (2), 7, 0, 0, 7, 1, 2, 7, 7]
        // [1, 0, 8, 0, 7, 0, 7, (1), 0, 7, 1, 2, 7, 7]
        (expect [1, 0, 8, 0, 7, 0, 7, 1, 0, 7, 1, 2, 7, 7]),
    );
}
